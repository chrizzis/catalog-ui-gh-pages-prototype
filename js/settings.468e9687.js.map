{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./src/views/Settings.vue?c3bb","webpack:///src/views/Settings.vue","webpack:///./src/views/Settings.vue?91de","webpack:///./src/views/Settings.vue","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","render","_vm","_h","$createElement","_c","_self","attrs","scopedSlots","_u","key","fn","_v","proxy","_s","sortOrder","searchKeys","showMetadata","on","resetSettings","staticClass","model","$vuetify","theme","callback","$$v","$set","expression","$event","stopPropagation","copyToClipboard","apply","arguments","domProps","getExportData","staticRenderFns","components","data","mounted","console","log","getPrefs","watch","resetPrefs","rawCatalogToCopy","setAttribute","select","successful","document","execCommand","msg","alert","window","getSelection","removeAllRanges","component","VBtn","VCheckbox","VContainer","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VIcon","baseMixins","isActive","parentIsActive","expansionPanel","immediate","handler","isBooted","oldVal","$nextTick","beforeDestroy","h","showLazyContent","directives","class","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","String"],"mappings":"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","file":"js/settings.468e9687.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-expansion-panels',{attrs:{\"accordion\":\"\"}},[_c('v-expansion-panel',[_c('v-expansion-panel-header',{scopedSlots:_vm._u([{key:\"actions\",fn:function(){return [_c('v-icon',[_vm._v(\" mdi-cog \")])]},proxy:true}])},[_vm._v(\" Settings \")]),_c('v-expansion-panel-content',[_c('ul',[_c('li',[_vm._v(\"sort order: \"+_vm._s(_vm.sortOrder))]),_c('li',[_vm._v(\"search keys: \"+_vm._s(_vm.searchKeys))]),_c('li',[_vm._v(\"show metadata: \"+_vm._s(_vm.showMetadata))])]),_c('v-btn',{on:{\"click\":_vm.resetSettings}},[_vm._v(\"reset settings\")])],1)],1),_c('v-expansion-panel',[_c('v-expansion-panel-header',{scopedSlots:_vm._u([{key:\"actions\",fn:function(){return [_c('v-icon',[_vm._v(\" mdi-palette \")])]},proxy:true}])},[_vm._v(\" Theme \")]),_c('v-expansion-panel-content',[_c('v-checkbox',{staticClass:\"pt-3\",attrs:{\"off-icon\":\"mdi-theme-light-dark\",\"on-icon\":\"mdi-theme-light-dark\"},model:{value:(_vm.$vuetify.theme.dark),callback:function ($$v) {_vm.$set(_vm.$vuetify.theme, \"dark\", $$v)},expression:\"$vuetify.theme.dark\"}}),_vm._v(\" themes to choose from and a reset button \")],1)],1),_c('v-expansion-panel',[_c('v-expansion-panel-header',{scopedSlots:_vm._u([{key:\"actions\",fn:function(){return [_c('v-icon',[_vm._v(\" mdi-information-outline \")])]},proxy:true}])},[_vm._v(\" Catalog \")]),_c('v-expansion-panel-content',[_c('v-btn',{on:{\"click\":function($event){$event.stopPropagation();return _vm.copyToClipboard.apply(null, arguments)}}},[_vm._v(\"copy to clipboard\")]),_c('input',{attrs:{\"type\":\"hidden\",\"id\":\"raw-export-data\"},domProps:{\"value\":_vm.getExportData}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <v-expansion-panels accordion>\n      <v-expansion-panel>\n        <v-expansion-panel-header>\n          Settings\n          <template v-slot:actions>\n            <v-icon> mdi-cog </v-icon>\n          </template>\n        </v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <ul>\n            <li>sort order: {{ sortOrder }}</li>\n            <li>search keys: {{ searchKeys }}</li>\n            <li>show metadata: {{ showMetadata }}</li>\n          </ul>\n          <v-btn @click=\"resetSettings\">reset settings</v-btn>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n      <v-expansion-panel>\n        <v-expansion-panel-header>\n          Theme\n          <template v-slot:actions>\n            <v-icon> mdi-palette </v-icon>\n          </template>\n        </v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <v-checkbox\n            class=\"pt-3\"\n            v-model=\"$vuetify.theme.dark\"\n            off-icon=\"mdi-theme-light-dark\"\n            on-icon=\"mdi-theme-light-dark\"\n          ></v-checkbox>\n          themes to choose from and a reset button\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n\n      <v-expansion-panel>\n        <v-expansion-panel-header>\n          Catalog\n          <template v-slot:actions>\n            <v-icon> mdi-information-outline </v-icon>\n          </template>\n        </v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <v-btn @click.stop=\"copyToClipboard\">copy to clipboard</v-btn>\n          <input type=\"hidden\" id=\"raw-export-data\" :value=\"getExportData\" />\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </v-container>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  components: {},\n  // data: () => {},\n  data() {\n    return {};\n  },\n\n  props: {},\n\n  mounted() {},\n\n  computed: {\n    ...mapGetters([\"getPrefs\", \"getExportData\"]),\n    sortOrder() {\n      console.log(`settings:sortOrder`);\n      return this.getPrefs.sortOrder ? \"123\" : \"abc\";\n    },\n    searchKeys() {\n      return this.getPrefs.searchKeys;\n    },\n    showMetadata() {\n      return this.getPrefs.showMetadata ? \"yes\" : \"no\";\n    },\n  },\n\n  watch: {},\n\n  methods: {\n    ...mapActions([\"resetPrefs\"]),\n    resetSettings() {\n      this.resetPrefs();\n    },\n    copyToClipboard() {\n      let rawCatalogToCopy = document.querySelector(\"#raw-export-data\");\n      rawCatalogToCopy.setAttribute(\"type\", \"text\");\n      rawCatalogToCopy.select();\n\n      try {\n        var successful = document.execCommand(\"copy\");\n        var msg = successful ? \"successful\" : \"unsuccessful\";\n        alert(\"raw catalog was copied \" + msg);\n      } catch (err) {\n        alert(\"Oops, unable to copy\");\n      }\n\n      /* unselect the range */\n      rawCatalogToCopy.setAttribute(\"type\", \"hidden\");\n      window.getSelection().removeAllRanges();\n    },\n  },\n};\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=a48bd688&\"\nimport script from \"./Settings.vue?vue&type=script&lang=js&\"\nexport * from \"./Settings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\ninstallComponents(component, {VBtn,VCheckbox,VContainer,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  computed: {\n    parentIsActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler (val, oldVal) {\n        if (val) this.isBooted = true\n\n        if (oldVal == null) this.isActive = val\n        else this.$nextTick(() => this.isActive = val)\n      },\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n        'aria-expanded': this.isActive,\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}